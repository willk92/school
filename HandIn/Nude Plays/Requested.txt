				; PlayProfit.asm
				; WILLIAM KELLEY
				; CS340 - ASSEMBLY LANGUAGE(RIMES)
				; NUDE PLAYS PROFIT PROGRAM W/ OUTPUT

				include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				.386
				.stack 4096
				ExitProcess proto,dwExitCode:dword

 00000000			.data
 = 0000000D			CR				EQU		13
 = 0000000A			LF				EQU 	10
 = 00000000			NULL			EQU 	0

 00000000 2B			negative		byte	'+'	;set default to positive

 00000001 00000113		ticket			dword	275
 00000005 00000082		patrons			dword	130
 00000009 00000055		cost			dword	85

 0000000D 0000000A		ten				dword	10
 00000011 00000064		hundred			dword	100

 00000015 00000000		topprofit		dword	0
 00000019 00000000		topprice		dword	0
 0000001D 00000000		topdollar		dword	0
 00000021 00000000		topcent			dword	0

 00000025 00000000		profit_dollars		dword	?
 00000029 00000000		profit_cents		dword	?
 0000002D 00000000		profit				dword	?

 00000031 00000000		ticket_dollars	dword	?
 00000035 00000000		ticket_cents	dword	?

 00000039 50 6C 61 79 50	output	byte	'PlayProfitOutput.txt', NULL
	   72 6F 66 69 74
	   4F 75 74 70 75
	   74 2E 74 78 74
	   00
 0000004E 00000000		outfile	dword	?

 00000052 20 20 20 20 20	head	byte	'           ', 'Nude Plays Profit Chart', CR, LF
	   20 20 20 20 20
	   20 4E 75 64 65
	   20 50 6C 61 79
	   73 20 50 72 6F
	   66 69 74 20 43
	   68 61 72 74 0D
	   0A
 00000076 54 69 63 6B 65	header	byte	'Ticket Price', '      ', 'Patrons', '      '
	   74 20 50 72 69
	   63 65 20 20 20
	   20 20 20 50 61
	   74 72 6F 6E 73
	   20 20 20 20 20
	   20
 00000095  20 20 20 20 50			byte	'    ', 'Profits', CR, LF, NULL
	   72 6F 66 69 74
	   73 0D 0A 00

 000000A3  0000000C [		ticket_message			byte	12 dup(?), '      '
	    00
	   ] 20 20 20 20
	   20 20
 000000B5  00000007 [		patrons_message			byte	7 dup(?), '          '
	    00
	   ] 20 20 20 20
	   20 20 20 20 20
	   20
 000000C6  00000007 [		profit_message			byte	7 dup(?), CR, LF, NULL
	    00
	   ] 0D 0A 00
 000000D0 42 65 73 74 20	best_header				byte	'Best ticket price is $'
	   74 69 63 6B 65
	   74 20 70 72 69
	   63 65 20 69 73
	   20 24
 000000E6  00000004 [		best_ticket_price		byte	4 dup(?), CR, LF, NULL
	    00
	   ] 0D 0A 00

 00000000			.code
 00000000			main PROC
 00000000  BA 00000039 R			mov edx, offset output
 00000005  E8 00000000 E			call CreateOutputFile
 0000000A  A3 0000004E R			mov outfile, eax
 0000000F  8D 35 00000052 R			lea esi, head
 00000015  A1 0000004E R			mov eax, outfile
 0000001A  E8 000001BB				call _PRINT_TO_FILE

 0000001F			again:
 0000001F  A1 00000001 R			mov eax, ticket
 00000024  8B 1D 00000009 R			mov ebx, cost
 0000002A  2B C3				sub eax, ebx
 0000002C  8B 1D 00000005 R			mov ebx, patrons
 00000032  0F AF C3				imul eax, ebx
 00000035  A3 0000002D R			mov profit, eax
 0000003A  83 F8 00				cmp eax, 0
 0000003D  7F 0A				jg positive
 0000003F  C6 05 00000000 R			mov negative, '-'
	   2D
 00000046  6B C0 FF				imul eax, -1

 00000049			positive:
 00000049  BA 00000000				mov edx, 0
 0000004E  F7 3D 00000011 R			idiv hundred
 00000054  A3 00000025 R			mov profit_dollars, eax
 00000059  89 15 00000029 R			mov profit_cents, edx
 0000005F  8D 35 000000C6 R			lea esi, profit_message
 00000065  B9 00000007				mov ecx, 7
 0000006A  E8 00000187				call _BLANKOUT
 0000006F  83 3D 00000029 R			cmp profit_cents, 0
	   00
 00000076  75 05				jne good
 00000078  4E					dec esi
 00000079  B0 30				mov al, '0'
 0000007B  88 06				mov [esi], al

 0000007D			good:
 0000007D  A1 00000029 R			mov eax, profit_cents
 00000082  E8 0000013C				call _INT_TO_ASCII
 00000087  B0 2E				mov al, '.'
 00000089  4E					dec esi
 0000008A  88 06				mov [esi], al
 0000008C  A1 00000025 R			mov eax, profit_dollars
 00000091  E8 0000012D				call _INT_TO_ASCII
 00000096  4E					dec esi
 00000097  B0 24				mov al, '$'
 00000099  88 06				mov [esi], al
 0000009B  80 3D 00000000 R			cmp negative, '-'
	   2D
 000000A2  75 05				jne pos_result
 000000A4  4E					dec esi
 000000A5  B0 2D				mov al, '-'
 000000A7  88 06				mov [esi], al

 000000A9			pos_result:
 000000A9  8D 35 000000A3 R			lea esi, ticket_message
 000000AF  B9 0000000C				mov ecx, 12
 000000B4  E8 0000013D				call _BLANKOUT
 000000B9  BA 00000000				mov edx, 0
 000000BE  A1 00000001 R			mov eax, ticket
 000000C3  F7 3D 00000011 R			idiv hundred
 000000C9  A3 00000031 R			mov ticket_dollars, eax
 000000CE  89 15 00000035 R			mov ticket_cents, edx
 000000D4  83 3D 00000035 R			cmp ticket_cents, 0
	   00
 000000DB  75 05				jne keep_going
 000000DD  4E					dec esi
 000000DE  B0 30				mov al, '0'
 000000E0  88 06				mov [esi], al

 000000E2			keep_going:
 000000E2  A1 00000035 R			mov eax, ticket_cents
 000000E7  E8 000000D7				call _INT_TO_ASCII
 000000EC  4E					dec esi
 000000ED  B0 2E				mov al, '.'
 000000EF  88 06				mov [esi], al
 000000F1  A1 00000031 R			mov eax, ticket_dollars
 000000F6  E8 000000C8				call _INT_TO_ASCII
 000000FB  B0 24				mov al, '$'
 000000FD  4E					dec esi
 000000FE  88 06				mov [esi], al
 00000100  8D 35 000000B5 R			lea esi, patrons_message
 00000106  B9 00000007				mov ecx, 7
 0000010B  E8 000000E6				call _BLANKOUT
 00000110  A1 00000005 R			mov eax, patrons
 00000115  E8 000000A9				call _INT_TO_ASCII
 0000011A  8D 35 000000A3 R			lea esi, ticket_message
 00000120  A1 0000004E R			mov eax, outfile
 00000125  E8 000000B0				call _PRINT_TO_FILE
 0000012A  A1 0000002D R			mov eax, profit
 0000012F  8B 1D 00000015 R			mov ebx, topprofit
 00000135  3B D8				cmp ebx, eax
 00000137  7F 0F				jg undesired
 00000139  A3 00000015 R			mov topprofit, eax
 0000013E  A1 00000001 R			mov eax, ticket
 00000143  A3 00000019 R			mov topprice, eax

 00000148			undesired:
 00000148  83 2D 00000001 R			sub ticket, 5
	   05
 0000014F  83 05 00000005 R			add patrons, 16
	   10
 00000156  83 05 00000009 R			add cost, 3
	   03
 0000015D  81 3D 00000001 R			cmp ticket, 145
	   00000091
 00000167  0F 85 FFFFFEB2			jne again
 0000016D  BA 00000000				mov edx, 0
 00000172  A1 00000019 R			mov eax, topprice
 00000177  F7 3D 00000011 R			idiv hundred
 0000017D  A3 0000001D R			mov topdollar, eax
 00000182  89 15 00000021 R			mov topcent, edx
 00000188  8D 35 000000E6 R			lea esi, best_ticket_price
 0000018E  B9 00000004				mov ecx, 4
 00000193  E8 0000005E				call _BLANKOUT
 00000198  A1 00000021 R			mov eax, topcent
 0000019D  E8 00000021				call _INT_TO_ASCII
 000001A2  4E					dec esi
 000001A3  B0 2E				mov al, '.'
 000001A5  88 06				mov [esi], al
 000001A7  A1 0000001D R			mov eax, topdollar
 000001AC  E8 00000012				call _INT_TO_ASCII
 000001B1  8D 35 000000D0 R			lea esi, best_header
 000001B7  E8 0000001E				call _PRINT_TO_FILE

						invoke ExitProcess, 0
 000001BC  6A 00	   *	    push   +000000000h
 000001BE  E8 00000000 E   *	    call   ExitProcess
 000001C3			main endP

 000001C3			_INT_TO_ASCII PROC
 000001C3			next_digit:
 000001C3  BA 00000000				mov edx, 0
 000001C8  F7 35 0000000D R			div ten
 000001CE  80 C2 30				add dl, '0'
 000001D1  4E					dec esi
 000001D2  88 16				mov [esi], dl
 000001D4  83 F8 00				cmp eax, 0
 000001D7  75 EA				jne next_digit
 000001D9  C3					ret
 000001DA			_INT_TO_ASCII endP

 000001DA			_PRINT_TO_FILE PROC
 000001DA			next_char:
 000001DA  8A 16				mov dl, [esi]
 000001DC  80 FA 00				cmp dl, NULL
 000001DF  74 14				je done
 000001E1  8B D6				mov edx, esi
 000001E3  B9 00000001				mov ecx, 1
 000001E8  A1 0000004E R			mov eax, outfile
 000001ED  E8 00000000 E			call WriteToFile
 000001F2  46					inc esi
 000001F3  EB E5				jmp next_char
 000001F5			done:
 000001F5  C3					ret
 000001F6			_PRINT_TO_FILE endP

 000001F6			_BLANKOUT PROC
 000001F6  BA 00000020		mov edx, ' '
 000001FB			next:
 000001FB  88 16				mov[esi], dl
 000001FD  46					inc esi
 000001FE  49					dec ecx
 000001FF  83 F9 00				cmp ecx, 0
 00000202  75 F7				jne next
 00000204  C3					ret
 00000205			_BLANKOUT endP

				end main

	   0 Warnings
	   0 Errors
