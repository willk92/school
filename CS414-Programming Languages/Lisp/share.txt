(setq class '
  (
    ((name Seymore) (eng 3 4.0) (mat 3 3.0) (his 3 4.0) (bio 3 2.0) (biol 1 4.0))
    ((name Ichahbod) (cs 3 3.0) (mat 3 4.0) (spe 2 4.0) (che 3 4.0) (chel 1 3.0) (lit 3 3.0))
    ((name Zackery) (mat 5 3.0) (eng 3 3.0) (jou 2 3.0) (phy 3 3.0) (phyl 1 4.0) (lit 2 4.0))
    ((name Tukerville) (soc 4 3.0) (mus 2 4.0) (jou 3 4.0) (geo 4 4.0) (geol 1 3.0) (eng 3 3.0))
    ((name Simonsays) (css 3 3.0) (ast 3 4.0) (spe 3 4.0) (cs 3 4.0) (spe 2 3.0) (dan 4 4.0))
    ((name Snicker) (eng 3 4.0) (phy 4 4.0) (css 3 2.0) (csl  1 4.0) (ped 2 3.0) (mat 3 3.0))
    ((name Glass) (mat 3 1.0) (eng 3 1.0) (ped 1 1.0) (bio 3 1.0) (biol 1 0.0) (che 3 1.0) (chel 1 1.0))
  )
)

(defun prod (l)
  ( * (cadar l) (caddar l ))
)

(defun totpt (l)
  (cond ((null l) 0)
    (T (+  (prod l)(totpt (cdr l)) ))
  )
)

(defun gethr (l)
  (cadadr l)
)

(defun smhr (l)
  (cond ((null l) 0)
    (T (+  (cadar l)(smhr (cdr l)) ))
  )
)

(defun len (l)
(cond ((null l) 0)
		(T (+ 1(len (cdr l))))
  )
)

(defun addp(l)
  (cond ((null l) 0 )
    (T (+ (cadar l )(addp(cdr l)))); > closes at this line positive then add it
  )
) ; if its neg ignore it and get next one

(defun getgpa (l)
  (cond ((null l) 0)
    (T (/ (totpt (cdr l))(smhr (cdr l))))
  )
)

(defun eachstudent (l)
  (cond ((null l) nil)
    (T
    (cons (cons (cadaar l)(getgpa (car l)))(eachstudent (cdr l)))
    )
  )
)

;Using functions for gpa
(dribble "/Users/williamkelley/Documents/GitHub/school/CS414-Programming Languages/Lisp/output_student.txt")

(print (eachstudent class))

(dribble)