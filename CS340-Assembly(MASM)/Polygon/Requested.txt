Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/10/18 22:15:35
polygon.asm						     Page 1 - 1


				; polygon.asm
				; WILLIAM KELLEY
				; CS340 - ASSEMBLY LANGUAGE(RIMES)
				; CALCULATES AREA OF ANY POLYGON

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				.386
				.stack 4096
				ExitPROCess proto,dwExitCode:dword

 00000000			.data
 = 0000000D			CR			EQU		13
 = 0000000A			LF			EQU 	10
 = 00000000			NULL		EQU 	0

 00000000  000001F4 [		buffer		byte	500 dup(?)
	    00
	   ]
 000001F4  00000019 [		array		dword	25 dup(' ')
	    00000020
	   ]
 00000258 50 6F 6C 79 67	output		byte	"PolygonAreas.txt", NULL
	   6F 6E 41 72 65
	   61 73 2E 74 78
	   74 00
 00000269 50 6F 6C 79 67	filename	byte	"PolygonIn.txt", NULL
	   6F 6E 49 6E 2E
	   74 78 74 00
 00000277 00000000		infile		dword	?
 0000027B 00000000		outfile		dword	?

 0000027F 00000000		next	    dword	?
 00000283 0000000A		ten			dword	10
 00000287 00000002		two			dword	2

 0000028B 00000000		area		    dword	?
 0000028F 00000000		area_remainder	dword	?

 00000293 70 6F 6C 79 67	polygon_message		byte	"polygon "
	   6F 6E 20
 0000029B			polygon_count		byte	1 dup(?)
 0000029C 20 61 72 65 61	polygon_area	    byte	" area: "
	   3A 20
 000002A3 00			area_message		byte	5 dup(?), NULL
 000002A9 0D 0A 00		next_line	        byte	CR, LF, NULL


 00000000			.code
 00000000			main PROC
 00000000  BA 00000258 R			mov edx, offset output
 00000005  E8 00000000 E			call CreateOutputFile
 0000000A  A3 0000027B R			mov outfile, eax
 0000000F  BA 00000269 R			mov edx, offset filename
 00000014  E8 00000000 E			call OpenInputFile
 00000019  83 F8 00				cmp eax, 0
 0000001C  0F 84 000000CF			je failure
 00000022  A3 00000277 R			mov infile, eax
 00000027  B9 000001F4				mov ecx, 500
 0000002C  BA 00000000 R			mov edx, offset buffer
 00000031  A1 00000277 R			mov eax, infile
 00000036  E8 00000000 E			call ReadFromFile
 0000003B  B9 00000001				mov ecx, 1
 00000040  C7 05 0000027F R			mov next, offset buffer
	   00000000 R
 0000004A			main_loop:
 0000004A  8D 35 000001F4 R			lea esi, array
 00000050  51					push ecx
 00000051  B9 00000019				mov ecx, 25
 00000056  E8 000000D6				call _BLANK_ARRAY
 0000005B  8B 35 0000027F R			mov esi, next
 00000061  BF 000001F4 R			mov edi, offset array
 00000066  E8 0000008D				call _NEXT_SHAPE
 0000006B  89 35 0000027F R			mov next, esi
 00000071  8D 35 000001F4 R			lea esi, array
 00000077  E8 000000C5				call _DUP_STARTING
 0000007C  B9 00000000				mov ecx, 0
 00000081  8D 35 000001F4 R			lea esi, array
 00000087  E8 000000C8				call _AREA
 0000008C  59					pop ecx
 0000008D  8A D1				mov dl, cl
 0000008F  80 C2 30				add dl, '0'
 00000092  88 15 0000029B R			mov polygon_count, dl
 00000098  51					push ecx
 00000099  B9 00000005				mov ecx, 5
 0000009E  8D 35 000002A3 R			lea esi, area_message
 000000A4  E8 00000115				call _BLANKOUT
 000000A9  A1 0000028B R			mov eax, area
 000000AE  E8 000000D8				call _INT_TO_ASCII
 000000B3  8D 35 00000293 R			lea esi, polygon_message
 000000B9  A1 0000027B R			mov eax, outfile
 000000BE  E8 000000DF				call _PRINT_TO_FILE
 000000C3  83 3D 0000028F R			cmp area_remainder, 0
	   00
 000000CA  74 0A				je print_newline
 000000CC  A1 0000027B R			mov eax, outfile
 000000D1  E8 000000CC				call _PRINT_TO_FILE
 000000D6			print_newline:
 000000D6  8D 35 000002A9 R			lea esi, next_line
 000000DC  A1 0000027B R			mov eax, outfile
 000000E1  E8 000000BC				call _PRINT_TO_FILE
 000000E6  59					pop ecx
 000000E7  41					inc ecx
 000000E8  83 F9 06				cmp ecx, 6
 000000EB  0F 85 FFFFFF59			jne main_loop
						
 000000F1			failure:
						invoke ExitPROCess, 0
 000000F1  6A 00	   *	    push   +000000000h
 000000F3  E8 00000000 E   *	    call   ExitProcess
 000000F8			main endP

 000000F8			_NEXT_SHAPE PROC
 000000F8			next_point:
 000000F8  8A 06				mov al, [esi]
 000000FA  8A 5E 01				mov bl, 1[esi]
 000000FD  3C 0D				cmp al, CR
 000000FF  74 2D				je done
 00000101  3C 20				cmp al, ' '
 00000103  74 26				je space
 00000105  80 FB 20				cmp bl, ' '
 00000108  75 0A				jne two_digits
 0000010A  2C 30				sub al, '0'
 0000010C  88 07				mov [edi], al
 0000010E  46					inc esi
 0000010F  83 C7 04				add edi, 4
 00000112  EB E4				jmp next_point
 00000114			two_digits:
 00000114  2C 30				sub al, '0'
 00000116  F7 25 00000283 R			mul ten
 0000011C  80 EB 30				sub bl, '0'
 0000011F  02 C3				add al, bl
 00000121  88 07				mov [edi], al
 00000123  83 C7 04				add edi, 4
 00000126  83 C6 02				add esi, 2
 00000129  EB CD				jmp next_point
 0000012B			space:
 0000012B  46					inc esi
 0000012C  EB CA				jmp next_point
 0000012E			done:
 0000012E  46					inc esi
 0000012F  46					inc esi
 00000130  C3					ret
 00000131			_NEXT_SHAPE endP

 00000131			_BLANK_ARRAY PROC
 00000131			next_blank:
 00000131  83 F9 00				cmp ecx, 0
 00000134  74 0A				je all_blank
 00000136  B0 20				mov al, ' '
 00000138  88 06				mov [esi], al
 0000013A  83 C6 04				add esi, 4
 0000013D  49					dec ecx
 0000013E  EB F1				jmp next_blank
 00000140			all_blank:
 00000140  C3					ret
 00000141			_BLANK_ARRAY endP

 00000141			_DUP_STARTING PROC
 00000141  8B 06				mov eax, [esi]
 00000143  8B 5E 04				mov ebx, 4[esi]
 00000146			blankless:
 00000146  46					inc esi
 00000147  8B 16				mov edx, [esi]
 00000149  83 FA 20				cmp edx, ' '
 0000014C  75 F8				jne blankless
 0000014E  89 06				mov [esi], eax
 00000150  89 5E 04				mov 4[esi], ebx
 00000153  C3					ret
 00000154			_DUP_STARTING endP

 00000154			_AREA PROC
 00000154			next_points:
 00000154  8B 56 0C				mov edx, 12[esi]
 00000157  83 FA 20				cmp edx, ' '
 0000015A  74 16				je done
 0000015C  8B 46 08				mov eax, 8[esi]
 0000015F  0F AF 46 04				imul eax, 4[esi]
 00000163  8B 1E				mov ebx, [esi]
 00000165  0F AF 5E 0C				imul ebx, 12[esi]
 00000169  2B C3				sub eax, ebx
 0000016B  03 C8				add ecx, eax
 0000016D  83 C6 08				add esi, 8
 00000170  EB E2				jmp next_points
 00000172			done:
 00000172  BA 00000000				mov edx, 0
 00000177  8B C1				mov eax, ecx
 00000179  F7 3D 00000287 R			idiv two
 0000017F  A3 0000028B R			mov area, eax
 00000184  89 15 0000028F R			mov area_remainder, edx
 0000018A  C3					ret
 0000018B			_AREA endP

 0000018B			_INT_TO_ASCII PROC
 0000018B			next_digit:
 0000018B  BA 00000000				mov edx, 0
 00000190  F7 35 00000283 R			div ten
 00000196  80 C2 30				add dl, '0'
 00000199  4E					dec esi
 0000019A  88 16				mov [esi], dl
 0000019C  83 F8 00				cmp eax, 0
 0000019F  75 EA				jne next_digit
 000001A1  C3					ret
 000001A2			_INT_TO_ASCII endP

 000001A2			_PRINT_TO_FILE PROC
 000001A2			nextCharacter:
 000001A2  8A 16				mov dl, [esi]
 000001A4  80 FA 00				cmp dl, NULL
 000001A7  74 14				je outOfHere
 000001A9  8B D6				mov edx, esi
 000001AB  B9 00000001				mov ecx, 1
 000001B0  A1 0000027B R			mov eax, outfile
 000001B5  E8 00000000 E			call WriteToFile
 000001BA  46					inc esi
 000001BB  EB E5				jmp nextCharacter
 000001BD			outOfHere:
 000001BD  C3					ret
 000001BE			_PRINT_TO_FILE endP

 000001BE			_BLANKOUT PROC
 000001BE  BA 00000020		mov edx, ' '
 000001C3			blank:
 000001C3  88 16				mov[esi], dl
 000001C5  46					inc esi
 000001C6  49					dec ecx
 000001C7  83 F9 00				cmp ecx, 0
 000001CA  75 F7				jne blank
 000001CC  C3					ret
 000001CD			_BLANKOUT endP

				end main
				
	   0 Warnings
	   0 Errors
